" Gotta be first
set nocompatible              " be iMproved, required

" --- General settings ---
" allow backspacing over everything in insert mode
set backspace=indent,eol,start
set ruler " show the cursor position all the time"
set number " line numbers
set showcmd " display incomplete commands
set incsearch " do incremental searching
set hlsearch " highlighting of search matches

" In many terminal emulators the mouse works just fine, thus enable it.
if has('mouse')
  set mouse=a
endif

" ----- Vim Plug setup ----------------------------------------------------
call plug#begin()
 
Plug 'tyru/open-browser.vim' " opens url in browser
Plug 'http://github.com/tpope/vim-surround' " Surrounding ysw)
Plug 'https://github.com/preservim/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'https://github.com/ap/vim-css-color' " CSS Color Preview
Plug 'https://github.com/tpope/vim-commentary' " For Commenting gcc & gc
Plug 'sheerun/vim-polyglot' "Syntax autocomplete
Plug 'scrooloose/syntastic' "Syntax checking hacks for vim
Plug 'LunarWatcher/auto-pairs' " Auto pairs ()[]{}
Plug 'maxboisvert/vim-simple-complete' " word completion
Plug 'flazz/vim-colorschemes' " Vim colorschemes
Plug 'vim-airline/vim-airline' "Status tabline
Plug 'vim-airline/vim-airline-themes' "A collection of themes for vim-airline 
Plug 'tpope/vim-commentary' "Commenting code
Plug 'xolox/vim-misc' "Miscellaneous auto-load Vim scripts
Plug 'xolox/vim-easytags' "Automatic tag file generation and syntax
" highlighting of tags in vim 
Plug 'majutsushi/tagbar' "Vim plugin that displays tags in a Window ordered
Plug 'ctrlpvim/ctrlp.vim' "Fuzzy file, buffer, etc. finder
Plug 'tpope/vim-fugitive' "Git wrapper
Plug 'airblade/vim-gitgutter' "Shows git diff markers
Plug 'raimondi/delimitmate' "Autocompletion quotes, parens, brackets
Plug 'jez/vim-superman' "Read Unix man pages faster than a speeding bullet!
Plug 'christoomey/vim-tmux-navigator' "tmux navigation

" ----- Syntax plugins ------------------------------------------------
" Plug 'jez/vim-c0'
" Plug 'jez/vim-ispc'
Plug 'kchmck/vim-coffee-script'

call plug#end()

let g:AutoPairsShortcutToggle = '<C-P>'

" ----- Plugin-Specific Settings --------------------------------------
" We need this for plugins like Syntastic and vim-gitgutter which put symbols"
" in the sign column.
hi clear SignColumn

" ----- altercation/vim-colors-solarized settings -----
" Toggle this to "light" for light colorscheme
"set background=dark

" Uncomment the next line if your terminal is not configured for solarized
"let g:solarized_termcolors=256

" Set the colorscheme
colorscheme molokai

" ----- bling/vim-airline settings -----
" Always show statusbarset laststatus=2

" Fancy arrow symbols, requires a patched font
" To install a patched font, run over to
"     https://github.com/abertsch/Menlo-for-Powerline
" download all the .ttf files, double-click on them and click "Install"
" Finally, uncomment the next line
let g:airline_powerline_fonts = 1

" Show PASTE if in paste mode
let g:airline_detect_paste=1

" Show airline for tabs too
let g:airline#extensions#tabline#enabled = 1
"
" Use the solarized theme for the Airline status bar
let g:airline_theme='molokai'


" ----- scrooloose/syntastic settings -----
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
augroup mySyntastic
    au!
      au FileType tex let b:syntastic_mode = "passive"
    augroup END
" ----- xolox/vim-easytags settings -----
" Where to look for tags filesset tags=./tags;,~/.vimtags" Sensible defaults
let g:easytags_events = ['BufReadPost', 'BufWritePost']
let g:easytags_async = 1
let g:easytags_dynamic_files = 2
let g:easytags_resolve_links = 1
let g:easytags_suppress_ctags_warning = 1

" ----- majutsushi/tagbar settings -----
" Open/close tagbar with \b
nmap <silent> <leader>b :TagbarToggle<CR>
" Uncomment to open tagbar automatically whenever possible"autocmd BufEnter *
" nested :call tagbar#autoopen(0)

" ----- airblade/vim-gitgutter settings -----
" In vim-airline, only display "hunks" if the diff is non-zero
let g:airline#extensions#hunks#non_zero_only = 1
"
"" ----- Raimondi/delimitMate settings -----
" let delimitMate_expand_cr = 1
" augroup mydelimitMate
"   au!
"   au FileType markdown let b:delimitMate_nesting_quotes = ["`"]
"   au FileType tex let b:delimitMate_quotes = ""
"   au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'"
"   au FileType python let b:delimitMate_nesting_quotes = ['"', "'"]
" augroup END"'"`"]
" ----- jez/vim-superman settings -----
" better man page support
noremap K :SuperMan <cword><CR>

" ----- nerdtree settings -----
nnoremap <C-t> :NERDTreeToggle<CR>
